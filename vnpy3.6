#准备工作

注释掉 非CTP 接口 
论坛下载 3.6编译后的 dll .
read.me 中有 编译介绍 。

    "E:\MongoDB\Server\3.4\bin\mongod.exe" --config "E:\MongoDB\Server\3.4\mongod.cfg" --install

    E:
    cd E:\MongoDB\Server\3.4\bin
    mon
    
    
#数据导入
    由于2 与3 之间的区别 
    file函数要替换为 open 
    print 需要加括号
# 策略编写
策略在 sitpackge 里 配置 和 填写
要在 sitpackge 目录下的  CTA_setting.json 文件中 添加策略名称 和 合约
策略名称 和 文件名 字母数要一直
# 价差交易 
合约所在目录 文件 app\spreadTrading  ST_setting.json 

#安装JAQS  对接vnpy   https://www.quantos.org/

pip install python-snappy （下载 whl 文件）
pip install pyzmq
pip install jaqs

https://www.quantos.org/tradesim/doc.html

#用户可使用令牌登录访问在线数据系统
from jaqs.data import DataApi
api = DataApi(addr="tcp://data.tushare.org:8910") 
api.login("手机号", "token")  
from tradeapi import TradeApi    








    
 #开始使用DataApi
from jaqs.data import DataApi
api = DataApi(addr="tcp://data.tushare.org:8910") 
user_info, msg = api.login("13261680938", "eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVfdGltZSI6IjE1MTI1NDAxODY2MzkiLCJpc3MiOiJhdXRoMCIsImlkIjoiMTMyNjE2ODA5MzgifQ.jhIIeZzO38ejK9GbHGXPyliFRCGLgMPhhUgby2XjPVY")     
print (user_info)
print (msg    )

symbol = 'T1712.CFE, TF1712.CFE, rb1712.SHF'
fields = 'open,high,low,last,volume'

# 获取实时行情
df, msg = api.quote(symbol=symbol, fields=fields)
print(df)
print(msg)    


df, msg = api.daily(
                symbol="600832.SH, 600030.SH", 
                start_date="2012-10-26",
                end_date="2012-11-30", 
                fields="", 
                adjust_mode="post")







#用户可使用令牌登录访问仿真交易系统
import TradeApi
from jaqs.trade.tradeapi import TradeApi
tapi = TradeApi(addr="tcp://gw.quantos.org:8901") 
user_info, msg = tapi.login("13261680938", "eyJhbGciOiJIUzI1NiJ9.eyJjcmVhdGVfdGltZSI6IjE1MTI1NDAxODY2MzkiLCJpc3MiOiJhdXRoMCIsImlkIjoiMTMyNjE2ODA5MzgifQ.jhIIeZzO38ejK9GbHGXPyliFRCGLgMPhhUgby2XjPVY")    
# 选择策略号
tapi.use_strategy(637) # 123为给你分配的策略号，可以从user_info中获得

# 下单接口
task_id, msg = tapi.place_order("000025.SZ", "Buy", 57, 100)
print ("msg:", msg)
print ("task_id:", task_id )   
    
sid, msg = tapi.use_strategy(1)
print ("msg:", msg)
print ("sid:", sid )   
    
#查询Portfolio
#返回当前的策略帐号的Universe中所有标的的净持仓，包括持仓为0的标的。
#查询Portfolio
df, msg = tapi.query_account()
print ("msg: ", msg)
print (df      )

#查询当前策略帐号的所有持仓
df, msg = tapi.query_position()
print ("msg: ", msg)
print (df)


#单标的下单
task_id, msg = tapi.place_order("000025.SZ", "Buy", 57, 100)


#查询成交
#返回成交信息
df, msg = tapi.query_trade(task_id = task_id, format = 'pandas')
print(df, msg)


#------------
#创建DataView和DataService
#DataService提供原始的数据，目前jaqs已经提供远程数据服务类（RemoteDataService），可以通过互联网获取行情数据和参考数据。
from jaqs.data.dataservice import RemoteDataService
from jaqs.data.dataview import DataView
dv = DataView()
ds = RemoteDataService()


#示例代码：
#dv = DataView()
#ds = RemoteDataService()

secs = '600030.SH,000063.SZ,000001.SZ'
props = {'start_date': 20160601, 'end_date': 20170601, 'symbol': secs,
       'fields': 'open,close,high,low,volume,pb,net_assets,eps_basic',
       'freq': 1}
dv.init_from_config(props, data_api=ds)

#数据准备
#从数据服务获取数据：
dv.prepare_data()


snap1 = dv.get_snapshot(20170504, symbol='600030.SH,000063.SZ', fields='close,pb')

ds = RemoteDataService()
dv.add_field('total_share', ds)

